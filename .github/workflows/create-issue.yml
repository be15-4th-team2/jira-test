name: Create Jira issue

permissions:
  contents: write 
  issues: write
  
on:
  issues:
    types:
      - opened

jobs:
  create-issue:
    name: Create Jira issue
    runs-on: ubuntu-latest

    steps:
      - name: Login to Jira
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}

      - name: Checkout main code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Issue Parser
        uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/issue-template.yml

      - name: Log Issue Parser
        run: |
          echo 'ParentKey: ${{ steps.issue-parser.outputs.issueparser_parentKey }}'
          echo 'TicketNumber: ${{ steps.issue-parser.outputs.__ticket_number }}'
          echo 'JsonString: ${{ steps.issue-parser.outputs.jsonString }}'

      - name: Map GitHub Assignee to Jira AccountId
        id: map-assignee
        env:
          GITHUB_ASSIGNEE: ${{ github.event.issue.assignees[0].login }}
        run: |
          declare -A USER_MAP=(
            ["CHO-HYUN-SEUNG"]=${{ secrets.HYUN_SEUNG_ACCOUNT_ID }}
          )

          if [ -z "$GITHUB_ASSIGNEE" ]; then
            echo "No GitHub assignees found."
            echo "JIRA_ASSIGNEE=" >> $GITHUB_ENV
          else
            JIRA_ASSIGNEE=${USER_MAP[$GITHUB_ASSIGNEE]}
            if [ -z "$JIRA_ASSIGNEE" ]; then
              echo "No Jira mapping found for $GITHUB_ASSIGNEE"
              echo "JIRA_ASSIGNEE=" >> $GITHUB_ENV
            else
              echo "Found Jira AccountId: $JIRA_ASSIGNEE"
              echo "JIRA_ASSIGNEE=$JIRA_ASSIGNEE" >> $GITHUB_ENV
            fi
          fi

      - name: Create Jira Issue
        id: create
        uses: atlassian/gajira-create@v3
        with:
          project: TOKI
          issuetype: Task
          summary: '${{ github.event.issue.title }}'
          description: '임시 생성입니다. 나중에 업데이트합니다.'
          fields: |
            {
              "assignee": {
                "id": "${{ env.JIRA_ASSIGNEE }}"
              }
            }

      - name: Convert markdown to Jira Syntax
        uses: peter-evans/jira2md@v1
        id: md2jira
        with:
          input-text: |
            ### Github Issue Link
            - ${{ github.event.issue.html_url }}

            ### Git Branch Checkout
            ```bash
            git checkout -b ${{ steps.create.outputs.issue }}-${{ steps.issue-parser.outputs.issueparser_branch }}
            git push --set-upstream origin ${{ steps.create.outputs.issue }}-${{ steps.issue-parser.outputs.issueparser_branch }}
            ```

            ${{ github.event.issue.body }}
          mode: md2jira

      - name: Update Jira Issue Description safely
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          ISSUE_KEY: ${{ steps.create.outputs.issue }}
          NEW_DESCRIPTION: ${{ steps.md2jira.outputs.output-text }}
        run: |
          echo "${NEW_DESCRIPTION}" > description_raw.txt
          ESCAPED_DESCRIPTION=$(jq -Rs . < description_raw.txt)

          curl -X PUT \
            -u $JIRA_USER_EMAIL:$JIRA_API_TOKEN \
            -H "Content-Type: application/json" \
            --data "{\"fields\": {\"description\": $ESCAPED_DESCRIPTION}}" \
            "$JIRA_BASE_URL/rest/api/2/issue/$ISSUE_KEY"

      - name: Log created issue
        run: |
          ISSUE="${{ steps.create.outputs.issue }}"
          echo "=============================="
          echo "✅ Jira Issue Created: $ISSUE"
          echo "=============================="

      - name: Create branch with Ticket number
        run: |
          ISSUE_NUMBER="${{ steps.create.outputs.issue }}"
          ISSUE_TITLE="${{ steps.issue-parser.outputs.issueparser_branch }}"
          BRANCH_NAME="${ISSUE_NUMBER}-$(echo ${ISSUE_TITLE} | tr '[:upper:]' '[:lower:]' | sed 's/ /-/g; s/[^a-z0-9-]//g')"

          git checkout -b "${BRANCH_NAME}"
          git push --set-upstream origin "${BRANCH_NAME}"

      - name: Update GitHub Issue title
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'update-issue'
          token: ${{ secrets.GITHUB_TOKEN }}
          title: '[${{ steps.create.outputs.issue }}] ${{ github.event.issue.title }}'

      - name: Add comment with Jira issue link
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-comment'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            Jira Issue Created: [${{ steps.create.outputs.issue }}](${{ secrets.JIRA_BASE_URL }}/browse/${{ steps.create.outputs.issue }})
